<!DOCTYPE html>
<html>
<head>
  <title>{{title}}</title>
  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
  <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
  <style>
    #map {
      height: 600px;
      width: 100%;
    }
    #dataDisplay {
      margin-top: 20px;
    }
  </style>
</head>
<body>
  <div id="map"></div>
  <div id="dataDisplay">
    <h2>Received Data</h2>
    <pre id="dataOutput"></pre>
  </div>
  <script>
    // Initialize the map
    var map = L.map('map').setView([46.11929097137821, 14.756128960803503], 8);

    // Add a tile layer
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: 'Â© OpenStreetMap contributors'
    }).addTo(map);

    // Add a WebSocket connection
    var socket = new WebSocket('ws://localhost:3000');

    socket.onopen = function() {
      console.log('Connected to WebSocket server');
    };

    socket.onmessage = function(event) {
      var data = JSON.parse(event.data);
      console.log('Received data:', data); // Log data to console
      displayData(data);
      updateMap(data);
    };

    socket.onclose = function() {
      console.log('Disconnected from WebSocket server');
    };

    socket.onerror = function(error) {
      console.error('WebSocket error:', error);
    };

    // Function to update the map with new data
    function updateMap(data) {
      // Clear existing markers (optional)
      map.eachLayer(function(layer) {
        if (layer instanceof L.Marker) {
          map.removeLayer(layer);
        }
      });

      // Add new markers to the map
      data.forEach(function(item) {
        var latitude = item.data_series_id.location.latitude;
        var longitude = item.data_series_id.location.longitude;
        var marker = L.marker([latitude, longitude]).addTo(map);

        // Customize the marker popup with relevant data
        var popupContent;
        if (item.data_series_id.name.startsWith('Weather')) {
          popupContent = `
            <strong>${item.data_series_id.name}</strong><br>
            Wind Speed: ${item.data.windSpeed || 'N/A'}<br>
            Wind Gusts: ${item.data.windGusts || 'N/A'}<br>
            Precipitation: ${item.data.precipitation || 'N/A'}
          `;
        } else if (item.data_series_id.name.startsWith('AirQuality')) {
          popupContent = `
            <strong>${item.data_series_id.name}</strong><br>
            PM10: ${item.data.pm10 || 'N/A'}<br>
            PM2.5: ${item.data.pm25 || 'N/A'}<br>
            Ozone: ${item.data.ozon || 'N/A'}<br>
            NO2: ${item.data.no2 || 'N/A'}
          `;
        } else {
          popupContent = `<strong>${item.data_series_id.name}</strong><br>No relevant data available.`;
        }

        marker.bindPopup(popupContent);
      });
    }

    // Function to display data in the pre element
    function displayData(data) {
      var dataOutput = document.getElementById('dataOutput');
      dataOutput.textContent = JSON.stringify(data, null, 2); // Pretty-print JSON data
    }
  </script>
</body>
</html>
