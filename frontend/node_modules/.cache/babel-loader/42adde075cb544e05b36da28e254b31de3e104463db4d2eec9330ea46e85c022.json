{"ast":null,"code":"var _jsxFileName = \"C:\\\\vscProjekti\\\\spletno\\\\AtmoTracker\\\\frontend\\\\src\\\\components\\\\WebSocket.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSocketComponent = () => {\n  _s();\n  const connection = useRef(null);\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const socket = new WebSocket(\"ws://127.0.0.1:3002\");\n\n    // Connection opened\n    socket.addEventListener(\"open\", event => {\n      console.log(\"WebSocket connection established\");\n      socket.send(\"Connection established\");\n    });\n\n    // Listen for messages\n    socket.addEventListener(\"message\", event => {\n      console.log(\"Message from server: \", event.data);\n      setMessages(prevMessages => [...prevMessages, event.data]);\n    });\n\n    // Handle connection close\n    socket.addEventListener(\"close\", event => {\n      console.log(\"WebSocket connection closed\");\n    });\n\n    // Handle connection error\n    socket.addEventListener(\"error\", error => {\n      console.error(\"WebSocket error: \", error);\n    });\n\n    // Store the socket connection\n    connection.current = socket;\n\n    // Cleanup function to close the WebSocket connection\n    return () => {\n      if (socket.readyState === 1) {\n        socket.close();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"WebSocket Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(WebSocketComponent, \"A2yaVynIWXSyWPWS0Myp0xmm/Ag=\");\n_c = WebSocketComponent;\nexport default WebSocketComponent;\nvar _c;\n$RefreshReg$(_c, \"WebSocketComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","WebSocketComponent","_s","connection","messages","setMessages","socket","WebSocket","addEventListener","event","console","log","send","data","prevMessages","error","current","readyState","close","children","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","_c","$RefreshReg$"],"sources":["C:/vscProjekti/spletno/AtmoTracker/frontend/src/components/WebSocket.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst WebSocketComponent = () => {\r\n  const connection = useRef(null);\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const socket = new WebSocket(\"ws://127.0.0.1:3002\");\r\n\r\n    // Connection opened\r\n    socket.addEventListener(\"open\", (event) => {\r\n      console.log(\"WebSocket connection established\");\r\n      socket.send(\"Connection established\");\r\n    });\r\n\r\n    // Listen for messages\r\n    socket.addEventListener(\"message\", (event) => {\r\n      console.log(\"Message from server: \", event.data);\r\n      setMessages((prevMessages) => [...prevMessages, event.data]);\r\n    });\r\n\r\n    // Handle connection close\r\n    socket.addEventListener(\"close\", (event) => {\r\n      console.log(\"WebSocket connection closed\");\r\n    });\r\n\r\n    // Handle connection error\r\n    socket.addEventListener(\"error\", (error) => {\r\n      console.error(\"WebSocket error: \", error);\r\n    });\r\n\r\n    // Store the socket connection\r\n    connection.current = socket;\r\n\r\n    // Cleanup function to close the WebSocket connection\r\n    return () => {\r\n      if (socket.readyState === 1) {\r\n        socket.close();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>WebSocket Messages</h1>\r\n      <ul>\r\n        {messages.map((message, index) => (\r\n          <li key={index}>{message}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WebSocketComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,UAAU,GAAGN,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CF,SAAS,CAAC,MAAM;IACd,MAAMU,MAAM,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;;IAEnD;IACAD,MAAM,CAACE,gBAAgB,CAAC,MAAM,EAAGC,KAAK,IAAK;MACzCC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;MAC/CL,MAAM,CAACM,IAAI,CAAC,wBAAwB,CAAC;IACvC,CAAC,CAAC;;IAEF;IACAN,MAAM,CAACE,gBAAgB,CAAC,SAAS,EAAGC,KAAK,IAAK;MAC5CC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,KAAK,CAACI,IAAI,CAAC;MAChDR,WAAW,CAAES,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEL,KAAK,CAACI,IAAI,CAAC,CAAC;IAC9D,CAAC,CAAC;;IAEF;IACAP,MAAM,CAACE,gBAAgB,CAAC,OAAO,EAAGC,KAAK,IAAK;MAC1CC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC5C,CAAC,CAAC;;IAEF;IACAL,MAAM,CAACE,gBAAgB,CAAC,OAAO,EAAGO,KAAK,IAAK;MAC1CL,OAAO,CAACK,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C,CAAC,CAAC;;IAEF;IACAZ,UAAU,CAACa,OAAO,GAAGV,MAAM;;IAE3B;IACA,OAAO,MAAM;MACX,IAAIA,MAAM,CAACW,UAAU,KAAK,CAAC,EAAE;QAC3BX,MAAM,CAACY,KAAK,CAAC,CAAC;MAChB;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BvB,OAAA;MAAAmB,QAAA,EACGf,QAAQ,CAACoB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3B1B,OAAA;QAAAmB,QAAA,EAAiBM;MAAO,GAAfC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAC9B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACrB,EAAA,CAlDID,kBAAkB;AAAA0B,EAAA,GAAlB1B,kBAAkB;AAoDxB,eAAeA,kBAAkB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}