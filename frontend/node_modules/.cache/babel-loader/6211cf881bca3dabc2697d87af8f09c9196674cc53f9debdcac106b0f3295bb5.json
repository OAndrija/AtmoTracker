{"ast":null,"code":"var _jsxFileName = \"C:\\\\vscProjekti\\\\spletno\\\\AtmoTracker\\\\frontend\\\\src\\\\components\\\\WebSocket.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSocketComponent = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    // Create a new WebSocket connection\n    const socket = new WebSocket('ws://localhost:3002');\n\n    // Connection opened\n    socket.addEventListener('open', event => {\n      console.log('Connected to WebSocket server');\n    });\n\n    // Listen for messages\n    socket.addEventListener('message', event => {\n      console.log('Message from server:', event.data);\n      setMessages(prevMessages => [...prevMessages, event.data]);\n    });\n\n    // Handle connection close\n    socket.addEventListener('close', event => {\n      console.log('WebSocket connection closed');\n    });\n\n    // Handle connection error\n    socket.addEventListener('error', error => {\n      console.error('WebSocket error:', error);\n    });\n\n    // Cleanup function\n    return () => {\n      if (socket.readyState === 1) {\n        // <-- This is important\n        socket.close();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"WebSocket Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(WebSocketComponent, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = WebSocketComponent;\nexport default WebSocketComponent;\nvar _c;\n$RefreshReg$(_c, \"WebSocketComponent\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","WebSocketComponent","_s","messages","setMessages","socket","WebSocket","addEventListener","event","console","log","data","prevMessages","error","readyState","close","children","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","_c","$RefreshReg$"],"sources":["C:/vscProjekti/spletno/AtmoTracker/frontend/src/components/WebSocket.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst WebSocketComponent = () => {\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Create a new WebSocket connection\r\n    const socket = new WebSocket('ws://localhost:3002');\r\n\r\n    // Connection opened\r\n    socket.addEventListener('open', (event) => {\r\n      console.log('Connected to WebSocket server');\r\n    });\r\n\r\n    // Listen for messages\r\n    socket.addEventListener('message', (event) => {\r\n      console.log('Message from server:', event.data);\r\n      setMessages((prevMessages) => [...prevMessages, event.data]);\r\n    });\r\n\r\n    // Handle connection close\r\n    socket.addEventListener('close', (event) => {\r\n      console.log('WebSocket connection closed');\r\n    });\r\n\r\n    // Handle connection error\r\n    socket.addEventListener('error', (error) => {\r\n      console.error('WebSocket error:', error);\r\n    });\r\n\r\n    // Cleanup function\r\n    return () => {\r\n        if (socket.readyState === 1) { // <-- This is important\r\n            socket.close();\r\n        }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>WebSocket Messages</h1>\r\n      <ul>\r\n        {messages.map((message, index) => (\r\n          <li key={index}>{message}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WebSocketComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,MAAM,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;;IAEnD;IACAD,MAAM,CAACE,gBAAgB,CAAC,MAAM,EAAGC,KAAK,IAAK;MACzCC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC9C,CAAC,CAAC;;IAEF;IACAL,MAAM,CAACE,gBAAgB,CAAC,SAAS,EAAGC,KAAK,IAAK;MAC5CC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,KAAK,CAACG,IAAI,CAAC;MAC/CP,WAAW,CAAEQ,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEJ,KAAK,CAACG,IAAI,CAAC,CAAC;IAC9D,CAAC,CAAC;;IAEF;IACAN,MAAM,CAACE,gBAAgB,CAAC,OAAO,EAAGC,KAAK,IAAK;MAC1CC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC5C,CAAC,CAAC;;IAEF;IACAL,MAAM,CAACE,gBAAgB,CAAC,OAAO,EAAGM,KAAK,IAAK;MAC1CJ,OAAO,CAACI,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC1C,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACT,IAAIR,MAAM,CAACS,UAAU,KAAK,CAAC,EAAE;QAAE;QAC3BT,MAAM,CAACU,KAAK,CAAC,CAAC;MAClB;IACJ,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BpB,OAAA;MAAAgB,QAAA,EACGb,QAAQ,CAACkB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BvB,OAAA;QAAAgB,QAAA,EAAiBM;MAAO,GAAfC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAC9B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAClB,EAAA,CA9CID,kBAAkB;AAAAuB,EAAA,GAAlBvB,kBAAkB;AAgDxB,eAAeA,kBAAkB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}