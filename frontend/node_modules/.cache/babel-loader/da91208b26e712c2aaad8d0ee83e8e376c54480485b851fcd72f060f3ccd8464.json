{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSocketComponent = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const socket = useRef(null);\n  useEffect(() => {\n    if (socket.current) {\n      console.log('WebSocket already connected');\n      return;\n    }\n\n    // Create a new WebSocket connection\n    socket.current = new WebSocket('ws://localhost:3002');\n\n    // Connection opened\n    socket.current.addEventListener('open', event => {\n      console.log('Connected to WebSocket server');\n    });\n\n    // Listen for messages\n    socket.current.addEventListener('message', event => {\n      console.log('Message from server:', event.data);\n      setMessages(prevMessages => [...prevMessages, event.data]);\n    });\n\n    // Handle connection close\n    socket.current.addEventListener('close', event => {\n      console.log('WebSocket connection closed');\n      socket.current = null;\n    });\n\n    // Handle connection error\n    socket.current.addEventListener('error', error => {\n      console.error('WebSocket error:', error);\n    });\n\n    // Cleanup function\n    return () => {\n      if (socket.current && socket.current.readyState === WebSocket.OPEN) {\n        socket.current.close();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(WebSocketComponent, \"erAghG0U97skipYVscNgLwAULBg=\");\n_c = WebSocketComponent;\nexport default WebSocketComponent;\nvar _c;\n$RefreshReg$(_c, \"WebSocketComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","WebSocketComponent","_s","messages","setMessages","socket","current","console","log","WebSocket","addEventListener","event","data","prevMessages","error","readyState","OPEN","close","_c","$RefreshReg$"],"sources":["C:/vscProjekti/spletno/AtmoTracker/frontend/src/components/WebSocket.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst WebSocketComponent = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const socket = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (socket.current) {\r\n      console.log('WebSocket already connected');\r\n      return;\r\n    }\r\n\r\n    // Create a new WebSocket connection\r\n    socket.current = new WebSocket('ws://localhost:3002');\r\n\r\n    // Connection opened\r\n    socket.current.addEventListener('open', (event) => {\r\n      console.log('Connected to WebSocket server');\r\n    });\r\n\r\n    // Listen for messages\r\n    socket.current.addEventListener('message', (event) => {\r\n      console.log('Message from server:', event.data);\r\n      setMessages((prevMessages) => [...prevMessages, event.data]);\r\n    });\r\n\r\n    // Handle connection close\r\n    socket.current.addEventListener('close', (event) => {\r\n      console.log('WebSocket connection closed');\r\n      socket.current = null;\r\n    });\r\n\r\n    // Handle connection error\r\n    socket.current.addEventListener('error', (error) => {\r\n      console.error('WebSocket error:', error);\r\n    });\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      if (socket.current && socket.current.readyState === WebSocket.OPEN) {\r\n        socket.current.close();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WebSocketComponent;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMS,MAAM,GAAGV,MAAM,CAAC,IAAI,CAAC;EAE3BD,SAAS,CAAC,MAAM;IACd,IAAIW,MAAM,CAACC,OAAO,EAAE;MAClBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1C;IACF;;IAEA;IACAH,MAAM,CAACC,OAAO,GAAG,IAAIG,SAAS,CAAC,qBAAqB,CAAC;;IAErD;IACAJ,MAAM,CAACC,OAAO,CAACI,gBAAgB,CAAC,MAAM,EAAGC,KAAK,IAAK;MACjDJ,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC9C,CAAC,CAAC;;IAEF;IACAH,MAAM,CAACC,OAAO,CAACI,gBAAgB,CAAC,SAAS,EAAGC,KAAK,IAAK;MACpDJ,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEG,KAAK,CAACC,IAAI,CAAC;MAC/CR,WAAW,CAAES,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEF,KAAK,CAACC,IAAI,CAAC,CAAC;IAC9D,CAAC,CAAC;;IAEF;IACAP,MAAM,CAACC,OAAO,CAACI,gBAAgB,CAAC,OAAO,EAAGC,KAAK,IAAK;MAClDJ,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1CH,MAAM,CAACC,OAAO,GAAG,IAAI;IACvB,CAAC,CAAC;;IAEF;IACAD,MAAM,CAACC,OAAO,CAACI,gBAAgB,CAAC,OAAO,EAAGI,KAAK,IAAK;MAClDP,OAAO,CAACO,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC1C,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACX,IAAIT,MAAM,CAACC,OAAO,IAAID,MAAM,CAACC,OAAO,CAACS,UAAU,KAAKN,SAAS,CAACO,IAAI,EAAE;QAClEX,MAAM,CAACC,OAAO,CAACW,KAAK,CAAC,CAAC;MACxB;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEjB,OAAA,CAAAF,SAAA,mBACE,CAAC;AAEP,CAAC;AAACI,EAAA,CA/CID,kBAAkB;AAAAiB,EAAA,GAAlBjB,kBAAkB;AAiDxB,eAAeA,kBAAkB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}